plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
//    id "org.openrepose.gradle.plugins.jaxb" version "2.5.0"
//    id("com.github.bjornvester.xjc") version "1.6.0"
//    id "com.intershop.gradle.jaxb" version "5.1.0"
    id("org.unbroken-dome.xjc") version "2.0.0"
}

group = 'com.columbia'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "javax.xml.bind:jaxb-api:2.3.0"
    xjcEpisodes('org.ow2.authzforce:authzforce-ce-core-pdp-api:20.0.0')
    xjcEpisodes(configurations['compileClasspath'])
//    xjcEpisode 'org.example:my-model:1.2.3'
//    xjcEpisode configurations['compileClasspath']

//    implementation group: 'com.sun.xml.bind', name: 'jaxb-xjc', version: '3.0.1'
//    implementation group: 'com.sun.xml.bind', name: 'jaxb-jxc', version: '3.0.1'
//    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '3.0.1'
//    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '3.0.1'
//    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '3.0.1'
//    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'
//    implementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.0.1'

//    implementation group: 'org.glassfish.jaxb', name: 'jaxb-xjc', version: '2.3.3'

//    compileOnly(files(genJaxb.classesDir).builtBy(genJaxb))
//    jaxb 'com.sun.xml.bind:jaxb-xjc:2.1.7'
//    jaxb "com.migesok:jaxb-java-time-adapters:1.1.3"
//    jaxb "org.jvnet.jaxb2_commons:jaxb2-basics:1.11.1"
//    jaxb 'org.jvnet.jaxb2_commons:jaxb2-basics-ant:1.11.1'
//    jaxb 'org.jvnet.jaxb2_commons:jaxb2-basics-annotate:1.0.4'
//    jaxb (
//            'org.glassfish.jaxb:jaxb-xjc:2.2.11',
//            'org.glassfish.jaxb:jaxb-runtime:2.2.11',
////            'org.jvnet.jaxb2_commons:jaxb2-basics-annotate:1.0.4',
////            'org.jvnet.jaxb2_commons:jaxb2-basics-ant:1.11.1',
////            'org.slf4j:slf4j-log4j12:1.7.25'
//    )
//    xjc 'com.example:xjc-plugin:0.0.0'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.2.8'
    implementation group: 'org.ow2.authzforce', name: 'authzforce-ce-core-pdp-engine', version: '19.0.0'
    implementation group: 'org.ow2.authzforce', name: 'authzforce-ce-core-pdp-api', version: '20.0.0'
    runtimeOnly 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'io.projectreactor:reactor-test'
}

ant.lifecycleLogLevel = "DEBUG"

sourceSets {
    main {
        xjcCatalog.srcDir("src/main/resources/authz")
        xjcSchema.srcDir("src/main/resources/authz")
        xjcBinding.srcDir("src/main/resources/authz")
        xjcGenerateEpisode = true
    }
}


//jaxb {
//    javaGen {
//        posConfig {
//            binding = file('src\\main\\resources\\jaxb\\bindings.xjb')
//            schema = file('src\\main\\resources\\ext.xsd')
//            catalog = file('src\\main\\resources\\jaxb\\catalog.xml')
//            extension = true
//        }
//    }
//}

//xjc {
//    xsdDir.set(layout.projectDirectory.dir("src/main/resources"))
//    xsdFiles = project.files(
//            xsdDir.file("ext.xsd"),
//    )
//    markGenerated.set(true)
//    bindingFiles = project.files("src/main/resources/jaxb/bindings.xjb")
//}


//jaxb {
//    xsdDir = "${project.rootDir}/src/main/resources/jaxb-test/multiple"
//    bindingsDir = "${project.rootDir}/src/main/resources/jaxb-test/multiple/xjb"
//    episodesDir = "${project.buildDir}/generated-resources/schema/episodes"
//    xjc {
//        taskClassname = 'org.jvnet.jaxb2_commons.xjc.XJC2Task'
//        args = ['-Xannotate']
//    }
//}

//jaxb {
//    xsdDir = "src/main/resources"
//    xsdIncludes=["ext.xsd"]
//    bindingsDir = "src/main/jaxb"
//    bindings=["bindings.xjb"]
//
//    xjc {
//        destinationDir="src/main/java"
//        generatePackage="com.columbia.iotabacserver.jaxbgenerates"
//        extension=true
//        removeOldOutput="yes"
//        generateEpisodeFiles = true
//        taskClassname        = "jaxb"
////        generatePackage      = "com.company.example"
//        args                 = ["-Xinheritance", "-Xannotate"]
//    }
//}

//task jaxb {
//    System.setProperty('javax.xml.accessExternalSchema', 'all')
//    def jaxbTargetDir = file("src/main/java")
//    doLast {
//        jaxbTargetDir.mkdirs()
//        ant.taskdef(
//                name: 'xjc',
//                classname: 'com.sun.tools.xjc.XJCTask',
//                classpath: configurations.jaxb.asPath,
//        )
//        ant.jaxbTargetDir = jaxbTargetDir
//        ant.xjc(
//                destdir: '${jaxbTargetDir}',
//                package: 'com.columbia.iotabacserver.jaxb',
//                schema: 'src/main/resources/authz/ext.xsd',
//                binding: "src/main/resources/bindings.xjb",
//                catalog: "src/main/resources/catalog.xml",
//                removeOldOutput: 'yes', extension: 'true',
//        )
//    }
//}

tasks.named('test') {
    useJUnitPlatform()
}
